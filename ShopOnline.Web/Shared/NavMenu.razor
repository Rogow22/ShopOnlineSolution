@implements IDisposable
@inject IShoppingCartService shoppingCartService


<div class="external-link">
    <a href="https://www.facebook.com/" target="_blank">
        <span class="fa fa-star"></span>&nbsp;
        <span class="text-rainbow">Give us feedback!</span>
        &nbsp;<span class="fa fa-star"></span>
    </a>
</div>

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href=""><span class="fas fa-chevron-circle-up" aria-hidden="true"></span>&nbsp;UzCom</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="fas fa-home" aria-hidden="true"></span>&nbsp;Home
            </NavLink>
        </div>

        <ProductCategoriesNavMenu/>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="ShoppingCart">
                <span class="fa fa-shopping-cart" aria-hidden="true"></span>&nbsp; Shopping Cart <b>&nbsp;@shoppingCartItemsCount</b>
            </NavLink>
        </div>
        <div class="contact">
            <NavLink class="nav-link" href="Contact">
                <span class="fas fa-envelope" aria-hidden="true"></span>&nbsp; Contact
            </NavLink>
                </div>
    </nav>
</div>



@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private int shoppingCartItemsCount = 0;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    protected override void OnInitialized()
    {
        shoppingCartService.OnShoppingCartChanged += ShoppingCartChanged;
    }
    private void ShoppingCartChanged(int totalQty)
    {
        shoppingCartItemsCount = totalQty;
        StateHasChanged();
    }
    void IDisposable.Dispose()
    {
        shoppingCartService.OnShoppingCartChanged -= ShoppingCartChanged;
    }
}
