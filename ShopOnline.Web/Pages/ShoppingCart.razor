@page "/ShoppingCart"
@inherits ShoppingCartBase

@if (ShoppingCartItems == null && ErrorMessage == null)
{
    <DisplaySpinner></DisplaySpinner>
}
else if (ErrorMessage != null)
{
    <DisplayError ErrorMessage="@ErrorMessage"></DisplayError>
}
else
{
    <h3 class="mb-5">Shopping Cart</h3>
    @if (ShoppingCartItems.Count() > 0)
    {
        <div class="row mb-5">
            <div class="col-md-9">
                @foreach (var item in ShoppingCartItems)
                {
                    <div class="row mb-4">
                        <div class="col-md-4">
                            <img src="@item.ProductImageURL" width="300" class="img-thumbnail">
                        </div>
                        <div class="col-md-8">
                            <h5>@item.ProductName</h5>
                            <div class="mb-4">@item.ProductDescription</div>
                            <span>
                                Price: <b>@item.Price.ToString("C")</b>
                                <input @oninput="() => UpdateQty_Input(item.Id)"
                                       @onkeypress="((e) => HandleKeyPress(e, item.Id, item.Qty))"
                                       type="number" @bind="@item.Qty" min="0" />
                                <button data-itemId="@item.Id" class="btn btn-info btn-sm update-qty"
                                        @onclick="(() => UpdateQtyCartItem_Click(item.Id, item.Qty))">
                                    Update
                                </button>
                            </span>
                            <div>
                                <button @onclick="(() => DeleteCartItem_Click(item.Id))"
                                        class="btn btn-danger sm">
                                    <i class="fa fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="col-md-3">
                <h5>Cart Summary</h5>
                <div class="mt-2">
                    <div>Total - (@TotalQuantity items)&nbsp;<b>@TotalPrice</b></div>
                    <a href="Checkout" class="btn btn-success">
                        <span class="oi oi-credit-card"></span>&nbsp; Proceed to Checkout
                    </a>
                </div>
            </div>
        </div>
    }
    else
    {
        <h4>There are currently no items in your shopping cart</h4>
    }

}

@code {

    private async Task HandleKeyPress(KeyboardEventArgs e, int itemId, int qty)
    {
        if (e.Key == "Enter")
        {
            await UpdateQtyCartItem_Click(itemId, qty);
        }
    }

    protected async Task UpdateQtyCartItem_Click(int id, int qty)
    {
        try
        {
            if (qty > 0)
            {
                var updateItemDto = new CartItemQtyUpdateDto
                    {
                        CartItemId = id,
                        Qty = qty
                    };

                var returnedUpdateItemDto = await this.ShoppingCartService.UpdateQty(updateItemDto);

                await UpdateItemTotalPrice(returnedUpdateItemDto);

                CartChanged();

                await MakeUpdateQtyButtonVisible(id, false);
            }
            else
            {
                await DeleteCartItem_Click(id);
            }
        }
        catch (Exception)
        {
            throw;
        }
    }
}
